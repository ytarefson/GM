{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nclass OtherNews extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      otherNews: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      news\n    } = this.props;\n    let max = news.length - 1;\n    let min = 1;\n    let array = [];\n\n    for (array.length; array.length < 4; false) {\n      let index = Math.floor(Math.random() * (max - min + 1)) + min;\n      let newItem = news[index];\n\n      if (!array.includes(newItem)) {\n        array.push(newItem);\n      }\n    }\n\n    this.setState({\n      otherNews: array\n    });\n  }\n\n  render() {\n    const {\n      otherNews\n    } = this.state;\n    let otherNewsContent = 'Загрузка...';\n    otherNewsContent = otherNews.map(item => __jsx(\"div\", {\n      className: \"\",\n      key: `other-${item.id}`\n    }, __jsx(Link, {\n      href: `/novosti?id=${item.id}`,\n      as: `/novosti/${item.id}`,\n      key: `other-${item.id}`\n    }, __jsx(\"a\", {\n      className: \"other-new\"\n    }, __jsx(\"div\", {\n      className: \"img-container\"\n    }, __jsx(\"img\", {\n      className: \"detail-img\",\n      src: `/images/${item.img}`,\n      alt: item.label,\n      title: item.label\n    })), __jsx(\"span\", {\n      className: \"other-new-title\"\n    }, item.label))))); // }\n\n    return __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(\"span\", {\n      className: \"subheading-common\"\n    }, \"\\u041B\\u0435\\u043D\\u0442\\u0430 \\u043D\\u043E\\u0432\\u043E\\u0441\\u0442\\u0435\\u0439:\")), __jsx(\"div\", {\n      className: \"col-12 other-new-plate\"\n    }, otherNewsContent));\n  }\n\n}\n\nOtherNews.propTypes = {\n  news: PropTypes.array.isRequired\n};\nexport default OtherNews;","map":{"version":3,"sources":["G:/OSPanel/domains/gmnext9/components/news/OtherNews.js"],"names":["React","Component","PropTypes","Link","OtherNews","constructor","props","state","otherNews","componentDidMount","news","max","length","min","array","index","Math","floor","random","newItem","includes","push","setState","render","otherNewsContent","map","item","id","img","label","propTypes","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKJ,KAAtB;AACA,QAAIK,GAAG,GAAGD,IAAI,CAACE,MAAL,GAAc,CAAxB;AACA,QAAIC,GAAG,GAAG,CAAV;AACA,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAKA,KAAK,CAACF,MAAX,EAAmBE,KAAK,CAACF,MAAN,GAAe,CAAlC,EAAqC,KAArC,EAA4C;AAC1C,UAAIG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBP,GAAG,GAAGE,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAA1D;AACA,UAAIM,OAAO,GAAGT,IAAI,CAACK,KAAD,CAAlB;;AACA,UAAI,CAACD,KAAK,CAACM,QAAN,CAAeD,OAAf,CAAL,EAA8B;AAC5BL,QAAAA,KAAK,CAACO,IAAN,CAAWF,OAAX;AACD;AACF;;AACD,SAAKG,QAAL,CAAc;AAAEd,MAAAA,SAAS,EAAEM;AAAb,KAAd;AACD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,QAAIiB,gBAAgB,GAAG,aAAvB;AACAA,IAAAA,gBAAgB,GAAGhB,SAAS,CAACiB,GAAV,CAAcC,IAAI,IACnC;AAAK,MAAA,SAAS,EAAC,EAAf;AAAkB,MAAA,GAAG,EAAG,SAAQA,IAAI,CAACC,EAAG;AAAxC,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAG,eAAcD,IAAI,CAACC,EAAG,EAD/B;AAEE,MAAA,EAAE,EAAG,YAAWD,IAAI,CAACC,EAAG,EAF1B;AAGE,MAAA,GAAG,EAAG,SAAQD,IAAI,CAACC,EAAG;AAHxB,OAKE;AAAG,MAAA,SAAS,EAAC;AAAb,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,GAAG,EAAG,WAAUD,IAAI,CAACE,GAAI,EAF3B;AAGE,MAAA,GAAG,EAAEF,IAAI,CAACG,KAHZ;AAIE,MAAA,KAAK,EAAEH,IAAI,CAACG;AAJd,MADF,CADF,EASE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAmCH,IAAI,CAACG,KAAxC,CATF,CALF,CADF,CADiB,CAAnB,CAHO,CAwBP;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAM,MAAA,SAAS,EAAC;AAAhB,0FADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC;AAAf,OAAyCL,gBAAzC,CAJF,CADF;AAQD;;AAzD+B;;AA4DlCpB,SAAS,CAAC0B,SAAV,GAAsB;AACpBpB,EAAAA,IAAI,EAAER,SAAS,CAACY,KAAV,CAAgBiB;AADF,CAAtB;AAIA,eAAe3B,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Link from 'next/link';\r\n\r\nclass OtherNews extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      otherNews: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { news } = this.props;\r\n    let max = news.length - 1;\r\n    let min = 1;\r\n    let array = [];\r\n    for (array.length; array.length < 4; false) {\r\n      let index = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      let newItem = news[index];\r\n      if (!array.includes(newItem)) {\r\n        array.push(newItem);\r\n      }\r\n    }\r\n    this.setState({ otherNews: array });\r\n  }\r\n\r\n  render() {\r\n    const { otherNews } = this.state;\r\n    let otherNewsContent = 'Загрузка...';\r\n    otherNewsContent = otherNews.map(item => (\r\n      <div className=\"\" key={`other-${item.id}`}>\r\n        <Link\r\n          href={`/novosti?id=${item.id}`}\r\n          as={`/novosti/${item.id}`}\r\n          key={`other-${item.id}`}\r\n        >\r\n          <a className=\"other-new\">\r\n            <div className=\"img-container\">\r\n              <img\r\n                className=\"detail-img\"\r\n                src={`/images/${item.img}`}\r\n                alt={item.label}\r\n                title={item.label}\r\n              />\r\n            </div>\r\n            <span className=\"other-new-title\">{item.label}</span>\r\n          </a>\r\n        </Link>\r\n      </div>\r\n    ));\r\n    // }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <span className=\"subheading-common\">Лента новостей:</span>\r\n        </div>\r\n        <div className=\"col-12 other-new-plate\">{otherNewsContent}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nOtherNews.propTypes = {\r\n  news: PropTypes.array.isRequired\r\n};\r\n\r\nexport default OtherNews;\r\n"]},"metadata":{},"sourceType":"module"}