{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport TextFieldGroup from './TextFieldGroup';\n\nvar RadioInputGroup = /*#__PURE__*/function (_Component) {\n  _inherits(RadioInputGroup, _Component);\n\n  var _super = _createSuper(RadioInputGroup);\n\n  function RadioInputGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioInputGroup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      other: '',\n      ckecked: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onOtherSelect = _this.onOtherSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RadioInputGroup, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        other: e.target.value\n      });\n      this.props.onSelect(e);\n    }\n  }, {\n    key: \"onOtherSelect\",\n    value: function onOtherSelect(e) {\n      this.setState({\n        other: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          values = _this$props.values,\n          name = _this$props.name,\n          label = _this$props.label,\n          onSelect = _this$props.onSelect,\n          otherlabel = _this$props.otherlabel,\n          askother = _this$props.askother,\n          type = _this$props.type,\n          error = _this$props.error;\n      var radioInputContent;\n      radioInputContent = values.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"radio-input-field\",\n          key: \"radioItem-\".concat(index)\n        }, __jsx(\"input\", {\n          type: type,\n          id: \"item-\".concat(item),\n          name: name,\n          value: item,\n          onClick: onSelect.bind(_this2)\n        }), __jsx(\"label\", {\n          htmlFor: \"item-\".concat(item)\n        }, item));\n      });\n      return __jsx(\"div\", {\n        className: \"radio-input-group\"\n      }, __jsx(\"span\", {\n        className: \"label-title\"\n      }, label), radioInputContent, askother && __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"radio-input-field\"\n      }, __jsx(\"input\", {\n        className: \"radio-input-div\",\n        type: type,\n        id: \"\".concat(otherlabel, \"-other\"),\n        name: name,\n        value: this.state.other //onClick={onSelect.bind(this)}\n\n      }), __jsx(\"label\", {\n        className: \"radio-label-div\",\n        htmlFor: \"\".concat(otherlabel, \"-other\")\n      }, otherlabel)), __jsx(TextFieldGroup, {\n        name: name,\n        placeholder: \"\\u0414\\u0440\\u0443\\u0433\\u043E\\u0435\",\n        value: this.state.other,\n        onChange: this.onChange,\n        error: error\n      })), error && __jsx(\"div\", {\n        className: \"invalid-feedback\"\n      }, error));\n    }\n  }]);\n\n  return RadioInputGroup;\n}(Component);\n\nRadioInputGroup.defaultProps = {\n  type: 'radio'\n};\nexport default RadioInputGroup;","map":null,"metadata":{},"sourceType":"module"}