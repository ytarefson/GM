{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport projects from '../tables/projectList';\nimport Link from 'next/link';\n\nclass PromoProjects extends Component {\n  constructor(props) {\n    super(props);\n    this.randomArray = this.randomArray.bind(this);\n  }\n\n  randomArray(arr, count) {\n    let shuffled = arr.slice(0);\n    let i = arr.length;\n    let min = i - count;\n    let temp;\n    let index;\n\n    while (i-- > min) {\n      index = Math.floor((i + 1) * Math.random());\n      temp = shuffled[index];\n      shuffled[index] = shuffled[i];\n      shuffled[i] = temp;\n    }\n\n    return shuffled.slice(min);\n  }\n\n  render() {\n    const {\n      itemsCount\n    } = this.props;\n    let projectsZero = [];\n    let promoprojects = [];\n    let content = '';\n    projects.map(item => {\n      if (item.id !== 0) {\n        projectsZero.push(item);\n      }\n    });\n    promoprojects = this.randomArray(projectsZero, itemsCount);\n    content = promoprojects.map((item, index) => __jsx(Link, {\n      key: `${index}-promoproj`,\n      href: `/proekti/${item.id}`\n    }, __jsx(\"a\", {\n      key: `${index}-promoproj`,\n      className: \"d-block promoproj-card\"\n    }, __jsx(\"div\", {\n      className: \"proj-img\"\n    }, __jsx(\"img\", {\n      src: `/images/projects/${item.img}`,\n      alt: item.label,\n      title: item.label,\n      className: \"w-100\"\n    })), __jsx(\"span\", {\n      className: \"text-common\"\n    }, item.label))));\n    return __jsx(React.Fragment, null, __jsx(\"h4\", {\n      className: \"header-min-colored\"\n    }, \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B:\"), __jsx(\"div\", {\n      className: \"proj-feed\"\n    }, content));\n  }\n\n}\n\nPromoProjects.propTypes = {\n  itemsCount: PropTypes.number.isRequired\n};\nexport default PromoProjects;","map":{"version":3,"sources":["G:/OSPanel/domains/gmnext9/components/products/PromoProjects.js"],"names":["React","Component","PropTypes","projects","Link","PromoProjects","constructor","props","randomArray","bind","arr","count","shuffled","slice","i","length","min","temp","index","Math","floor","random","render","itemsCount","projectsZero","promoprojects","content","map","item","id","push","img","label","propTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,GAAD,EAAMC,KAAN,EAAa;AACtB,QAAIC,QAAQ,GAAGF,GAAG,CAACG,KAAJ,CAAU,CAAV,CAAf;AACA,QAAIC,CAAC,GAAGJ,GAAG,CAACK,MAAZ;AACA,QAAIC,GAAG,GAAGF,CAAC,GAAGH,KAAd;AACA,QAAIM,IAAJ;AACA,QAAIC,KAAJ;;AAEA,WAAOJ,CAAC,KAAKE,GAAb,EAAkB;AAChBE,MAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,CAAC,GAAG,CAAL,IAAUK,IAAI,CAACE,MAAL,EAArB,CAAR;AACAJ,MAAAA,IAAI,GAAGL,QAAQ,CAACM,KAAD,CAAf;AACAN,MAAAA,QAAQ,CAACM,KAAD,CAAR,GAAkBN,QAAQ,CAACE,CAAD,CAA1B;AACAF,MAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcG,IAAd;AACD;;AACD,WAAOL,QAAQ,CAACC,KAAT,CAAeG,GAAf,CAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKhB,KAA5B;AACA,QAAIiB,YAAY,GAAG,EAAnB;AACA,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,OAAO,GAAG,EAAd;AACAvB,IAAAA,QAAQ,CAACwB,GAAT,CAAaC,IAAI,IAAI;AACnB,UAAIA,IAAI,CAACC,EAAL,KAAY,CAAhB,EAAmB;AACjBL,QAAAA,YAAY,CAACM,IAAb,CAAkBF,IAAlB;AACD;AACF,KAJD;AAKAH,IAAAA,aAAa,GAAG,KAAKjB,WAAL,CAAiBgB,YAAjB,EAA+BD,UAA/B,CAAhB;AACAG,IAAAA,OAAO,GAAGD,aAAa,CAACE,GAAd,CAAkB,CAACC,IAAD,EAAOV,KAAP,KAC1B,MAAC,IAAD;AAAM,MAAA,GAAG,EAAG,GAAEA,KAAM,YAApB;AAAiC,MAAA,IAAI,EAAG,YAAWU,IAAI,CAACC,EAAG;AAA3D,OACE;AAAG,MAAA,GAAG,EAAG,GAAEX,KAAM,YAAjB;AAA8B,MAAA,SAAS,EAAC;AAAxC,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AACE,MAAA,GAAG,EAAG,oBAAmBU,IAAI,CAACG,GAAI,EADpC;AAEE,MAAA,GAAG,EAAEH,IAAI,CAACI,KAFZ;AAGE,MAAA,KAAK,EAAEJ,IAAI,CAACI,KAHd;AAIE,MAAA,SAAS,EAAC;AAJZ,MADF,CADF,EASE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAA+BJ,IAAI,CAACI,KAApC,CATF,CADF,CADQ,CAAV;AAgBA,WACE,4BACE;AAAI,MAAA,SAAS,EAAC;AAAd,wHADF,EAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OAA4BN,OAA5B,CAFF,CADF;AAMD;;AAvDmC;;AA0DtCrB,aAAa,CAAC4B,SAAd,GAA0B;AACxBV,EAAAA,UAAU,EAAErB,SAAS,CAACgC,MAAV,CAAiBC;AADL,CAA1B;AAIA,eAAe9B,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport projects from '../tables/projectList';\r\nimport Link from 'next/link';\r\n\r\nclass PromoProjects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.randomArray = this.randomArray.bind(this);\r\n  }\r\n\r\n  randomArray(arr, count) {\r\n    let shuffled = arr.slice(0);\r\n    let i = arr.length;\r\n    let min = i - count;\r\n    let temp;\r\n    let index;\r\n\r\n    while (i-- > min) {\r\n      index = Math.floor((i + 1) * Math.random());\r\n      temp = shuffled[index];\r\n      shuffled[index] = shuffled[i];\r\n      shuffled[i] = temp;\r\n    }\r\n    return shuffled.slice(min);\r\n  }\r\n\r\n  render() {\r\n    const { itemsCount } = this.props;\r\n    let projectsZero = [];\r\n    let promoprojects = [];\r\n    let content = '';\r\n    projects.map(item => {\r\n      if (item.id !== 0) {\r\n        projectsZero.push(item);\r\n      }\r\n    });\r\n    promoprojects = this.randomArray(projectsZero, itemsCount);\r\n    content = promoprojects.map((item, index) => (\r\n      <Link key={`${index}-promoproj`} href={`/proekti/${item.id}`}>\r\n        <a key={`${index}-promoproj`} className=\"d-block promoproj-card\">\r\n          <div className=\"proj-img\">\r\n            <img\r\n              src={`/images/projects/${item.img}`}\r\n              alt={item.label}\r\n              title={item.label}\r\n              className=\"w-100\"\r\n            />\r\n          </div>\r\n          <span className=\"text-common\">{item.label}</span>\r\n        </a>\r\n      </Link>\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <h4 className=\"header-min-colored\">Выполненные проекты:</h4>\r\n        <div className=\"proj-feed\">{content}</div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nPromoProjects.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default PromoProjects;\r\n"]},"metadata":{},"sourceType":"module"}