{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport TextFieldGroup from './TextFieldGroup';\n\nclass RadioInputGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      other: '',\n      ckecked: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onOtherSelect = this.onOtherSelect.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      other: e.target.value\n    });\n    this.props.onSelect(e);\n  }\n\n  onOtherSelect(e) {\n    this.setState({\n      other: e.target.value\n    });\n  }\n\n  render() {\n    const {\n      values,\n      name,\n      label,\n      onSelect,\n      otherlabel,\n      askother,\n      type,\n      error\n    } = this.props;\n    let radioInputContent;\n    radioInputContent = values.map((item, index) => __jsx(\"div\", {\n      className: \"radio-input-field\",\n      key: `radioItem-${index}`\n    }, __jsx(\"input\", {\n      type: type,\n      id: `item-${item}`,\n      name: name,\n      value: item,\n      onClick: onSelect.bind(this)\n    }), __jsx(\"label\", {\n      htmlFor: `item-${item}`\n    }, item)));\n    return __jsx(\"div\", {\n      className: \"radio-input-group\"\n    }, __jsx(\"span\", {\n      className: \"label-title\"\n    }, label), radioInputContent, askother && __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"radio-input-field\"\n    }, __jsx(\"input\", {\n      className: \"radio-input-div\",\n      type: type,\n      id: `${otherlabel}-other`,\n      name: name,\n      value: this.state.other //onClick={onSelect.bind(this)}\n\n    }), __jsx(\"label\", {\n      className: \"radio-label-div\",\n      htmlFor: `${otherlabel}-other`\n    }, otherlabel)), __jsx(TextFieldGroup, {\n      name: name,\n      placeholder: \"\\u0414\\u0440\\u0443\\u0433\\u043E\\u0435\",\n      value: this.state.other,\n      onChange: this.onChange,\n      error: error\n    })), error && __jsx(\"div\", {\n      className: \"invalid-feedback\"\n    }, error));\n  }\n\n}\n\nRadioInputGroup.defaultProps = {\n  type: 'radio'\n};\nexport default RadioInputGroup;","map":{"version":3,"sources":["G:/OSPanel/domains/gmnext9/components/common/RadioInputGroup.js"],"names":["React","Component","classnames","TextFieldGroup","RadioInputGroup","constructor","props","state","other","ckecked","onChange","bind","onOtherSelect","e","setState","target","value","onSelect","render","values","name","label","otherlabel","askother","type","error","radioInputContent","map","item","index","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass RadioInputGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      other: '',\r\n      ckecked: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onOtherSelect = this.onOtherSelect.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      other: e.target.value\r\n    });\r\n    this.props.onSelect(e);\r\n  }\r\n\r\n  onOtherSelect(e) {\r\n    this.setState({\r\n      other: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      name,\r\n      label,\r\n      onSelect,\r\n      otherlabel,\r\n      askother,\r\n      type,\r\n      error\r\n    } = this.props;\r\n    let radioInputContent;\r\n\r\n    radioInputContent = values.map((item, index) => (\r\n      <div className=\"radio-input-field\" key={`radioItem-${index}`}>\r\n        <input\r\n          type={type}\r\n          id={`item-${item}`}\r\n          name={name}\r\n          value={item}\r\n          onClick={onSelect.bind(this)}\r\n        />\r\n        <label htmlFor={`item-${item}`}>{item}</label>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"radio-input-group\">\r\n        <span className=\"label-title\">{label}</span>\r\n        {radioInputContent}\r\n        {askother && (\r\n          <div>\r\n            <div className=\"radio-input-field\">\r\n              <input\r\n                className=\"radio-input-div\"\r\n                type={type}\r\n                id={`${otherlabel}-other`}\r\n                name={name}\r\n                value={this.state.other}\r\n                //onClick={onSelect.bind(this)}\r\n              />\r\n              <label\r\n                className=\"radio-label-div\"\r\n                htmlFor={`${otherlabel}-other`}\r\n              >\r\n                {otherlabel}\r\n              </label>\r\n            </div>\r\n            <TextFieldGroup\r\n              name={name}\r\n              placeholder=\"Другое\"\r\n              value={this.state.other}\r\n              onChange={this.onChange}\r\n              error={error}\r\n            />\r\n          </div>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRadioInputGroup.propTypes = {\r\n  type: PropTypes.string,\r\n  values: PropTypes.array.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  otherlabel: PropTypes.string,\r\n  askother: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nRadioInputGroup.defaultProps = {\r\n  type: 'radio'\r\n};\r\nexport default RadioInputGroup;\r\n"]},"metadata":{},"sourceType":"module"}