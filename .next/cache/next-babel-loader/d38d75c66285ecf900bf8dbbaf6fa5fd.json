{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ProductItems from \"./ProductItems\";\n\nvar ProductsPlate = /*#__PURE__*/function (_Component) {\n  _inherits(ProductsPlate, _Component);\n\n  var _super = _createSuper(ProductsPlate);\n\n  function ProductsPlate() {\n    _classCallCheck(this, ProductsPlate);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProductsPlate, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          brand = _this$props.brand,\n          minValue = _this$props.minValue,\n          maxValue = _this$props.maxValue,\n          data = _this$props.data,\n          view = _this$props.view; // Формирование начального массива продуктов по бренду\n\n      var productItems = []; // Если все - то добавляем все продукты в массив\n\n      if (brand == \"ALL\") {\n        data.map(function (category) {\n          category.map(function (item) {\n            productItems.push(item);\n          });\n        });\n      } else {\n        // Иначе копируем продукты из пропсов\n        productItems = data;\n      } // Работа с фильтром\n\n\n      var result = productItems.filter(function (item) {\n        return item.electricPower <= maxValue && item.electricPower >= minValue;\n      });\n      result.sort(function (a, b) {\n        return a.electricPower - b.electricPower;\n      });\n      return __jsx(ProductItems, {\n        data: result,\n        view: view\n      });\n    }\n  }]);\n\n  return ProductsPlate;\n}(Component);\n\nProductsPlate.defaultProps = {\n  minValue: 100,\n  maxValue: 4000,\n  view: \"list\"\n};\nexport default ProductsPlate;","map":null,"metadata":{},"sourceType":"module"}