{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport TextFieldGroup from './TextFieldGroup';\n\nvar RadioInputGroup = /*#__PURE__*/function (_Component) {\n  _inherits(RadioInputGroup, _Component);\n\n  var _super = _createSuper(RadioInputGroup);\n\n  function RadioInputGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioInputGroup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      other: '',\n      ckecked: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onOtherSelect = _this.onOtherSelect.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RadioInputGroup, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState({\n        other: e.target.value\n      });\n      this.props.onSelect(e);\n    }\n  }, {\n    key: \"onOtherSelect\",\n    value: function onOtherSelect(e) {\n      this.setState({\n        other: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          values = _this$props.values,\n          name = _this$props.name,\n          label = _this$props.label,\n          onSelect = _this$props.onSelect,\n          otherlabel = _this$props.otherlabel,\n          askother = _this$props.askother,\n          type = _this$props.type,\n          error = _this$props.error;\n      var radioInputContent;\n      radioInputContent = values.map(function (item, index) {\n        return __jsx(\"div\", {\n          className: \"radio-input-field\",\n          key: \"radioItem-\".concat(index)\n        }, __jsx(\"input\", {\n          type: type,\n          id: \"item-\".concat(item),\n          name: name,\n          value: item,\n          onClick: onSelect.bind(_this2)\n        }), __jsx(\"label\", {\n          htmlFor: \"item-\".concat(item)\n        }, item));\n      });\n      return __jsx(\"div\", {\n        className: \"radio-input-group\"\n      }, __jsx(\"span\", {\n        className: \"label-title\"\n      }, label), radioInputContent, askother && __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"radio-input-field\"\n      }, __jsx(\"input\", {\n        className: \"radio-input-div\",\n        type: type,\n        id: \"\".concat(otherlabel, \"-other\"),\n        name: name,\n        value: this.state.other //onClick={onSelect.bind(this)}\n\n      }), __jsx(\"label\", {\n        className: \"radio-label-div\",\n        htmlFor: \"\".concat(otherlabel, \"-other\")\n      }, otherlabel)), __jsx(TextFieldGroup, {\n        name: name,\n        placeholder: \"\\u0414\\u0440\\u0443\\u0433\\u043E\\u0435\",\n        value: this.state.other,\n        onChange: this.onChange,\n        error: error\n      })), error && __jsx(\"div\", {\n        className: \"invalid-feedback\"\n      }, error));\n    }\n  }]);\n\n  return RadioInputGroup;\n}(Component);\n\nRadioInputGroup.defaultProps = {\n  type: 'radio'\n};\nexport default RadioInputGroup;","map":{"version":3,"sources":["G:/OSPanel/domains/gmnext9/components/common/RadioInputGroup.js"],"names":["React","Component","classnames","TextFieldGroup","RadioInputGroup","props","state","other","ckecked","onChange","bind","onOtherSelect","e","setState","target","value","onSelect","values","name","label","otherlabel","askother","type","error","radioInputContent","map","item","index","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport TextFieldGroup from './TextFieldGroup';\r\n\r\nclass RadioInputGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      other: '',\r\n      ckecked: false\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onOtherSelect = this.onOtherSelect.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({\r\n      other: e.target.value\r\n    });\r\n    this.props.onSelect(e);\r\n  }\r\n\r\n  onOtherSelect(e) {\r\n    this.setState({\r\n      other: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      values,\r\n      name,\r\n      label,\r\n      onSelect,\r\n      otherlabel,\r\n      askother,\r\n      type,\r\n      error\r\n    } = this.props;\r\n    let radioInputContent;\r\n\r\n    radioInputContent = values.map((item, index) => (\r\n      <div className=\"radio-input-field\" key={`radioItem-${index}`}>\r\n        <input\r\n          type={type}\r\n          id={`item-${item}`}\r\n          name={name}\r\n          value={item}\r\n          onClick={onSelect.bind(this)}\r\n        />\r\n        <label htmlFor={`item-${item}`}>{item}</label>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"radio-input-group\">\r\n        <span className=\"label-title\">{label}</span>\r\n        {radioInputContent}\r\n        {askother && (\r\n          <div>\r\n            <div className=\"radio-input-field\">\r\n              <input\r\n                className=\"radio-input-div\"\r\n                type={type}\r\n                id={`${otherlabel}-other`}\r\n                name={name}\r\n                value={this.state.other}\r\n                //onClick={onSelect.bind(this)}\r\n              />\r\n              <label\r\n                className=\"radio-label-div\"\r\n                htmlFor={`${otherlabel}-other`}\r\n              >\r\n                {otherlabel}\r\n              </label>\r\n            </div>\r\n            <TextFieldGroup\r\n              name={name}\r\n              placeholder=\"Другое\"\r\n              value={this.state.other}\r\n              onChange={this.onChange}\r\n              error={error}\r\n            />\r\n          </div>\r\n        )}\r\n        {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRadioInputGroup.propTypes = {\r\n  type: PropTypes.string,\r\n  values: PropTypes.array.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  otherlabel: PropTypes.string,\r\n  askother: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nRadioInputGroup.defaultProps = {\r\n  type: 'radio'\r\n};\r\nexport default RadioInputGroup;\r\n"]},"metadata":{},"sourceType":"module"}