{"ast":null,"code":"const Validator = require('validator');\n\nconst isEmpty = require('./is-empty');\n\nmodule.exports = function validateFormInput(data) {\n  let errors = {}; // Имя организации:\n\n  data.organizationname = !isEmpty(data.organizationname) ? data.organizationname.trim() : '';\n\n  if (Validator.isEmpty(data.organizationname)) {\n    errors.organizationname = 'Поле имя организации не должно быть пустым';\n  } // Адрес огранизации:\n\n\n  data.organizationadres = !isEmpty(data.organizationadres) ? data.organizationadres.trim() : '';\n\n  if (Validator.isEmpty(data.organizationadres)) {\n    errors.organizationadres = 'Поле адрес организации не должно быть пустым';\n  } // Имя клиента:\n\n\n  data.personname = !isEmpty(data.personname) ? data.personname.trim() : '';\n\n  if (Validator.isEmpty(data.personname)) {\n    errors.personname = 'Поле ФИО не должно быть пустым';\n  } // Должность клиента:\n\n\n  data.personstatus = !isEmpty(data.personstatus) ? data.personstatus.trim() : '';\n\n  if (Validator.isEmpty(data.personstatus)) {\n    errors.personstatus = 'Поле должность не должно быть пустым';\n  } // Почта клиента:\n\n\n  data.personemail = !isEmpty(data.personemail) ? data.personemail.trim() : '';\n\n  if (Validator.isEmpty(data.personemail)) {\n    errors.personemail = 'Поле почта не должно быть пустым';\n  }\n\n  if (!Validator.isEmail(data.personemail)) {\n    errors.personemail = 'Укажите почту в формате inbox@mail.ru';\n  } // Телефон клиента:\n\n\n  data.personphone = !isEmpty(data.personphone) ? data.personphone.trim() : '';\n\n  if (Validator.isEmpty(data.personphone)) {\n    errors.personphone = 'Поле не должно быть пустым';\n  } // Мобильный номер клиента:\n\n\n  data.personmobile = !isEmpty(data.personmobile) ? data.personmobile.trim() : '';\n\n  if (Validator.isEmpty(data.personmobile)) {\n    errors.personmobile = 'Поле не должно быть пустым';\n  } // Характеристики места расположения:\n\n\n  data.locationparams = !isEmpty(data.locationparams) ? data.locationparams.trim() : '';\n\n  if (Validator.isEmpty(data.locationparams)) {\n    errors.locationparams = 'Поле не должно быть пустым';\n  } // Место установки генератора:\n\n\n  data.projectmountadres = !isEmpty(data.projectmountadres) ? data.projectmountadres.trim() : '';\n\n  if (Validator.isEmpty(data.projectmountadres)) {\n    errors.projectmountadres = 'Поле не должно быть пустым';\n  } // Описание проекта:\n\n\n  data.projectdescription = !isEmpty(data.projectdescription) ? data.projectdescription.trim() : 'Описание проекта не оставили';\n\n  if (Validator.isEmpty(data.projectdescription)) {\n    errors.projectdescription = 'Поле не должно быть пустым';\n  } // Режим работы оборудования:\n\n\n  data.operationmode = !isEmpty(data.operationmode) ? data.operationmode.trim() : '';\n\n  if (Validator.isEmpty(data.operationmode)) {\n    errors.operationmode = 'Поле не должно быть пустым';\n  } // Предполагаемая модель:\n\n\n  data.proposedmodel = !isEmpty(data.proposedmodel) ? data.proposedmodel.trim() : '';\n\n  if (Validator.isEmpty(data.proposedmodel)) {\n    errors.proposedmodel = 'Поле не должно быть пустым';\n  } // Требуемавя электрическая мощность:\n\n\n  data.electricpower = !isEmpty(data.electricpower) ? data.electricpower.trim() : '';\n\n  if (Validator.isEmpty(data.electricpower)) {\n    errors.electricpower = 'Поле не должно быть пустым';\n  } // Вид подключения:\n\n\n  data.connectiontype = !isEmpty(data.connectiontype) ? data.connectiontype.trim() : '';\n\n  if (Validator.isEmpty(data.connectiontype)) {\n    errors.connectiontype = 'Поле не должно быть пустым';\n  } // Минимальная продолжительная нагрузка\n\n\n  data.minimalload = !isEmpty(data.minimalload) ? data.minimalload.trim() : '';\n\n  if (Validator.isEmpty(data.minimalload)) {\n    errors.minimalload = 'Поле не должно быть пустым';\n  } // Варианты исполнения и размещения генераторных установок:\n\n\n  data.installationsettings = !isEmpty(data.installationsettings) ? data.installationsettings.trim() : '';\n\n  if (Validator.isEmpty(data.installationsettings)) {\n    errors.installationsettings = 'Поле не должно быть пустым';\n  } // Тип и характеристики используемого топлива:\n\n\n  data.fueltype = !isEmpty(data.fueltype) ? data.fueltype.trim() : '';\n\n  if (Validator.isEmpty(data.fueltype)) {\n    errors.fueltype = 'Поле не должно быть пустым';\n  } // Система Утилизации Тепла:\n\n\n  data.utilsystem = !isEmpty(data.utilsystem) ? data.utilsystem.trim() : '';\n\n  if (Validator.isEmpty(data.utilsystem)) {\n    errors.utilsystem = 'Поле не должно быть пустым';\n  } // Требуемая тепловая мощность:\n\n\n  data.reqheatpower = !isEmpty(data.reqheatpower) ? data.reqheatpower.trim() : '';\n\n  if (Validator.isEmpty(data.reqheatpower)) {\n    errors.reqheatpower = 'Поле не должно быть пустым';\n  } // Шеф-монтажные работы:\n\n\n  data.chefmontage = !isEmpty(data.chefmontage) ? data.chefmontage.trim() : '';\n\n  if (Validator.isEmpty(data.chefmontage)) {\n    errors.chefmontage = 'Поле не должно быть пустым';\n  } // Обучение эксплуатирующего персонала:\n\n\n  data.stafflearning = !isEmpty(data.stafflearning) ? data.stafflearning.trim() : '';\n\n  if (Validator.isEmpty(data.stafflearning)) {\n    errors.stafflearning = 'Поле не должно быть пустым';\n  } // Перечислите желаемые дополнительные работы и услуги:\n\n\n  data.otherworks = !isEmpty(data.otherworks) ? data.otherworks.trim() : '';\n\n  if (Validator.isEmpty(data.otherworks)) {\n    errors.otherworks = 'Поле не должно быть пустым';\n  } // Стоимость 1000 м3 газа:\n\n\n  data.gasprice = !isEmpty(data.gasprice) ? data.gasprice.trim() : '';\n\n  if (Validator.isEmpty(data.gasprice)) {\n    errors.gasprice = 'Поле не должно быть пустым';\n  } // Текущий тариф на электроэнергию:\n\n\n  data.currentenergytarif = !isEmpty(data.currentenergytarif) ? data.currentenergytarif.trim() : '';\n\n  if (Validator.isEmpty(data.currentenergytarif)) {\n    errors.currentenergytarif = 'Поле не должно быть пустым';\n  } // Текущий тариф на тепловую энергию:\n\n\n  data.currentheattarif = !isEmpty(data.currentheattarif) ? data.currentheattarif.trim() : '';\n\n  if (Validator.isEmpty(data.currentheattarif)) {\n    errors.currentheattarif = 'Поле не должно быть пустым';\n  } // Комментарии:\n\n\n  data.commentary = !isEmpty(data.commentary) ? data.commentary.trim() : 'Комментарий не оставили';\n\n  if (Validator.isEmpty(data.commentary)) {\n    errors.commentary = 'Поле не должно быть пустым';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n};","map":{"version":3,"sources":["G:/OSPanel/domains/gmnext9/validation/ask-form-validation.js"],"names":["Validator","require","isEmpty","module","exports","validateFormInput","data","errors","organizationname","trim","organizationadres","personname","personstatus","personemail","isEmail","personphone","personmobile","locationparams","projectmountadres","projectdescription","operationmode","proposedmodel","electricpower","connectiontype","minimalload","installationsettings","fueltype","utilsystem","reqheatpower","chefmontage","stafflearning","otherworks","gasprice","currentenergytarif","currentheattarif","commentary","isValid"],"mappings":"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","sourcesContent":["const Validator = require('validator');\r\nconst isEmpty = require('./is-empty');\r\n\r\nmodule.exports = function validateFormInput(data) {\r\n  let errors = {};\r\n\r\n  // Имя организации:\r\n  data.organizationname = !isEmpty(data.organizationname)\r\n    ? data.organizationname.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.organizationname)) {\r\n    errors.organizationname = 'Поле имя организации не должно быть пустым';\r\n  }\r\n  // Адрес огранизации:\r\n  data.organizationadres = !isEmpty(data.organizationadres)\r\n    ? data.organizationadres.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.organizationadres)) {\r\n    errors.organizationadres = 'Поле адрес организации не должно быть пустым';\r\n  }\r\n  // Имя клиента:\r\n  data.personname = !isEmpty(data.personname) ? data.personname.trim() : '';\r\n  if (Validator.isEmpty(data.personname)) {\r\n    errors.personname = 'Поле ФИО не должно быть пустым';\r\n  }\r\n  // Должность клиента:\r\n  data.personstatus = !isEmpty(data.personstatus)\r\n    ? data.personstatus.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.personstatus)) {\r\n    errors.personstatus = 'Поле должность не должно быть пустым';\r\n  }\r\n  // Почта клиента:\r\n  data.personemail = !isEmpty(data.personemail) ? data.personemail.trim() : '';\r\n  if (Validator.isEmpty(data.personemail)) {\r\n    errors.personemail = 'Поле почта не должно быть пустым';\r\n  }\r\n  if (!Validator.isEmail(data.personemail)) {\r\n    errors.personemail = 'Укажите почту в формате inbox@mail.ru';\r\n  }\r\n  // Телефон клиента:\r\n  data.personphone = !isEmpty(data.personphone) ? data.personphone.trim() : '';\r\n  if (Validator.isEmpty(data.personphone)) {\r\n    errors.personphone = 'Поле не должно быть пустым';\r\n  }\r\n  // Мобильный номер клиента:\r\n  data.personmobile = !isEmpty(data.personmobile)\r\n    ? data.personmobile.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.personmobile)) {\r\n    errors.personmobile = 'Поле не должно быть пустым';\r\n  }\r\n\r\n  // Характеристики места расположения:\r\n  data.locationparams = !isEmpty(data.locationparams)\r\n    ? data.locationparams.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.locationparams)) {\r\n    errors.locationparams = 'Поле не должно быть пустым';\r\n  }\r\n  // Место установки генератора:\r\n  data.projectmountadres = !isEmpty(data.projectmountadres)\r\n    ? data.projectmountadres.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.projectmountadres)) {\r\n    errors.projectmountadres = 'Поле не должно быть пустым';\r\n  }\r\n  // Описание проекта:\r\n  data.projectdescription = !isEmpty(data.projectdescription)\r\n    ? data.projectdescription.trim()\r\n    : 'Описание проекта не оставили';\r\n  if (Validator.isEmpty(data.projectdescription)) {\r\n    errors.projectdescription = 'Поле не должно быть пустым';\r\n  }\r\n\r\n  // Режим работы оборудования:\r\n  data.operationmode = !isEmpty(data.operationmode)\r\n    ? data.operationmode.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.operationmode)) {\r\n    errors.operationmode = 'Поле не должно быть пустым';\r\n  }\r\n  // Предполагаемая модель:\r\n  data.proposedmodel = !isEmpty(data.proposedmodel)\r\n    ? data.proposedmodel.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.proposedmodel)) {\r\n    errors.proposedmodel = 'Поле не должно быть пустым';\r\n  }\r\n  // Требуемавя электрическая мощность:\r\n  data.electricpower = !isEmpty(data.electricpower)\r\n    ? data.electricpower.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.electricpower)) {\r\n    errors.electricpower = 'Поле не должно быть пустым';\r\n  }\r\n  // Вид подключения:\r\n  data.connectiontype = !isEmpty(data.connectiontype)\r\n    ? data.connectiontype.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.connectiontype)) {\r\n    errors.connectiontype = 'Поле не должно быть пустым';\r\n  }\r\n  // Минимальная продолжительная нагрузка\r\n  data.minimalload = !isEmpty(data.minimalload) ? data.minimalload.trim() : '';\r\n  if (Validator.isEmpty(data.minimalload)) {\r\n    errors.minimalload = 'Поле не должно быть пустым';\r\n  }\r\n  // Варианты исполнения и размещения генераторных установок:\r\n  data.installationsettings = !isEmpty(data.installationsettings)\r\n    ? data.installationsettings.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.installationsettings)) {\r\n    errors.installationsettings = 'Поле не должно быть пустым';\r\n  }\r\n  // Тип и характеристики используемого топлива:\r\n  data.fueltype = !isEmpty(data.fueltype) ? data.fueltype.trim() : '';\r\n  if (Validator.isEmpty(data.fueltype)) {\r\n    errors.fueltype = 'Поле не должно быть пустым';\r\n  }\r\n  // Система Утилизации Тепла:\r\n  data.utilsystem = !isEmpty(data.utilsystem) ? data.utilsystem.trim() : '';\r\n  if (Validator.isEmpty(data.utilsystem)) {\r\n    errors.utilsystem = 'Поле не должно быть пустым';\r\n  }\r\n  // Требуемая тепловая мощность:\r\n  data.reqheatpower = !isEmpty(data.reqheatpower)\r\n    ? data.reqheatpower.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.reqheatpower)) {\r\n    errors.reqheatpower = 'Поле не должно быть пустым';\r\n  }\r\n  // Шеф-монтажные работы:\r\n  data.chefmontage = !isEmpty(data.chefmontage) ? data.chefmontage.trim() : '';\r\n  if (Validator.isEmpty(data.chefmontage)) {\r\n    errors.chefmontage = 'Поле не должно быть пустым';\r\n  }\r\n  // Обучение эксплуатирующего персонала:\r\n  data.stafflearning = !isEmpty(data.stafflearning)\r\n    ? data.stafflearning.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.stafflearning)) {\r\n    errors.stafflearning = 'Поле не должно быть пустым';\r\n  }\r\n  // Перечислите желаемые дополнительные работы и услуги:\r\n  data.otherworks = !isEmpty(data.otherworks) ? data.otherworks.trim() : '';\r\n  if (Validator.isEmpty(data.otherworks)) {\r\n    errors.otherworks = 'Поле не должно быть пустым';\r\n  }\r\n  // Стоимость 1000 м3 газа:\r\n  data.gasprice = !isEmpty(data.gasprice) ? data.gasprice.trim() : '';\r\n  if (Validator.isEmpty(data.gasprice)) {\r\n    errors.gasprice = 'Поле не должно быть пустым';\r\n  }\r\n  // Текущий тариф на электроэнергию:\r\n  data.currentenergytarif = !isEmpty(data.currentenergytarif)\r\n    ? data.currentenergytarif.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.currentenergytarif)) {\r\n    errors.currentenergytarif = 'Поле не должно быть пустым';\r\n  }\r\n  // Текущий тариф на тепловую энергию:\r\n  data.currentheattarif = !isEmpty(data.currentheattarif)\r\n    ? data.currentheattarif.trim()\r\n    : '';\r\n  if (Validator.isEmpty(data.currentheattarif)) {\r\n    errors.currentheattarif = 'Поле не должно быть пустым';\r\n  }\r\n  // Комментарии:\r\n  data.commentary = !isEmpty(data.commentary)\r\n    ? data.commentary.trim()\r\n    : 'Комментарий не оставили';\r\n  if (Validator.isEmpty(data.commentary)) {\r\n    errors.commentary = 'Поле не должно быть пустым';\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}