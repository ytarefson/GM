{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport ServiceUnitPlate from '../components/services/ServiceUnitPlate';\nimport FormPage from '../components/form';\n\nvar RacshetEcoEff = /*#__PURE__*/function (_Component) {\n  _inherits(RacshetEcoEff, _Component);\n\n  var _super = _createSuper(RacshetEcoEff);\n\n  function RacshetEcoEff() {\n    _classCallCheck(this, RacshetEcoEff);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RacshetEcoEff, [{\n    key: \"render\",\n    value: function render() {\n      var serviceName = this.props.serviceName;\n      return __jsx(Layout, null, __jsx(ServiceUnitPlate, {\n        serviceName: serviceName\n      }), __jsx(FormPage, {\n        product: serviceName\n      }));\n    }\n  }]);\n\n  return RacshetEcoEff;\n}(Component);\n\nRacshetEcoEff.getInitialProps = function _callee(context) {\n  var serviceName;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          serviceName = context.query.serviceName;\n          return _context.abrupt(\"return\", {\n            serviceName: serviceName\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default RacshetEcoEff;","map":null,"metadata":{},"sourceType":"module"}